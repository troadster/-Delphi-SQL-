Краткое описание

Компонент FloatSpinEdit предназначен для ввода чисел целых и дробных
чисел.

Вводить число можно как непосредственно с клавиатуры в поле ввода, так и 
увеличивая/уменьшая его значение при помощи компонента типа TUpDown или 
клавиш Up/Down. Кроме этого осуществляется контроль допустимого диапазона 
вводимого числа и корректности ввода. Существует так же возможность 
отображения суффикса (например "А/м"), после числа.

Компонент представляет собой контейнер (TWinControl), содержащий два 
компонента FEdit(TFloatEdit - потомок TEdit) и FUpDown(TUpDown).

В компоненте введены следующие новые свойства, доступные как на стадии 
разработки, так и на стадии выполнения:

UpDownPosition - определяет положение компонента FUpDown относительно, 
компонента FEdit (слева/справа), значение по умолчанию справа;

Precision(0..15) - определяет отображаемое количество значащих цифр, 
введённого числа Значение по умолчанию равно 2;

Sufix(string) - строка длинною не более 20 символов, определяющая суффикс 
(например "см") выводимый после введённого числа через пробел. По 
умолчанию - пустая строка;

Min(Extended) - определяет минимально допустимое значение вводимого 
числа. По умолчанию равно 100;

Max(Extended) - определяет максимально допустимое значение вводимого 
числа. По умолчанию равно -100;

Step(Extended) - определяет шаг изменения  значения вводимого числа, при 
изменении его значения посредством клавиш Up/Down или компонента UpDown. 
По умолчанию равно 0.25;

NumberValue(Extended) - определяет значение введённого числа, если 
введеноn некорректное число, свойство принимает значение DefNumberValue;

DefNumberValue(Extended) - определяет значение числа, при вводе 
некорректного значения. По умолчанию равно 0;

ArrowKeys(Boolean) - определяет можно ли использовать клавиши Up/Down для 
изменения  значения вводимого числа. По умолчанию True;

CheckOnExit(Boolean) - определяет, будет ли контролироваться значение 
введённого числа, при потере компонентом фокуса.

Кроме того компонент "выводит на поверхность" следующие свойства и 
события компонента FEdit, описание которых можно найти в справочной 
системе Delphi в разделе TEdit:

Text, Font, Color, AutoSize, AutoSelect,
OnEdtChange, OnEdtClick, OnEdtDblClick, OnEdtEnter, OnEdtExit,
OnEdtKeyDown, OnEdtKeyUp, OnEdtKeyPress, SetOnEdtKeyPress,
OnEdtMouseDown, OnEdtMouseUp, OnEdtMouseMove;
Имена вышеперечисленных событий отличаются от имён событий компонента
TEdit символами Edt после приставки On.

В компоненте так же определены два метода-функции:

class function CutSufixStr(InStr: string): string – функция "отсекает" 
суффикс и возвращает усечённое значение свойства Text, признаком суффикса 
является первый пробел встреченный с начала свойства-строки Text. Следует 
отметить, что ввести пробел и любые другие символы, кроме символов 
принадлежащих множеству ['0'..'9',#8,DecimalSeparator,'-','e','E'], с 
клавиатуры не возможно (см. ниже);

function DefineValue(var Value: Extended): Boolean – функция помещает в 
переменную Value значение StrToFloat(FEdit.Text) если преобразование 
прошло успешно и преобразованное значение лежит в диапазоне [Min ... Max] 
функция возвращает значение True, в противном случае функция возвращает 
значение False, а значение Value не изменяется. Метод может быть 
использован для предупреждения пользователя о введении недопустимого 
значения.

Компонент FEdit является потомком класса TFloatEdit = class(TEdit), 
определённого в этом модуле. Этот класс только переопределяет 
существующие методы диспечеризации событий (event-dispatching methods), 
для "препроцессорной" обработки некоторых событий:

KeyPress-контролирует нажатые клавиши и не позволяет вводить с клавиатуры 
cимволы, не принадлежащие множеству ['0'..'9',#8,DecimalSeparator,'-
','e','E'];

KeyDown - позволяет использовать клавиши Up/Down для изменения  значения 
вводимого числа;

Click, DoExit - позволяют выделять весь текст компонента, при первом 
щелчке мышью в компоненте, если задан флаг AutoSelect. DoExit так же 
осуществляет контроль допустимого диапазона вводимого числа и его 
корректность, если задан флаг CheckOnExit;

Контроль допустимого диапазона введённого значения осуществляется, 
следующим образом. Если введено некорректное значение (например "0..2."), 
то значение числа будет равным свойству DefNumberValue, если значение 
больше Max, то оно устанавливается равным Max, если значене менее Min, то 
то оно устанавливается равным Min. Контролируемое значение числа можно 
получить, прочитав свойство NumberValue или обратившись к методу 
DefineValue.
В определенных случаях будет так же проконтролировано символьное
представление числа в свойстве Text, после чего свойство Text будет
отформатировано в соответствии со свойствами Precision и Sufix:

- изменение значения вводимого числа клавишами Up/Down или посредством
компонента FUpDown;

- при потере компонентом фокуса (событие OnExit), если задан флаг
CheckOnExit;

